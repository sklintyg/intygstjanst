apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

test {
    exclude '**/*IT*'
}

task restAssuredTest(type: Test) {
    outputs.upToDateWhen { false }
    systemProperty "integration.tests.baseUrl", System.properties['baseUrl'] ?: "http://localhost:8080/"
    include '**/*IT*'
}

gretty {
    def jvmArgSpringProfiles = '-Dspring.profiles.active=dev,embedded,caching-enabled,it-fk-stub,wc-hsa-stub'
    contextPath = '/inera-certificate'
    contextConfigFile = file("src/main/webapp/WEB-INF/jetty-web.xml")
    integrationTestTask = null
    scanInterval = 0
    debugPort = 5005
    debugSuspend = false

    jvmArgs = [jvmArgSpringProfiles,
               "-Dcatalina.base=${buildDir}/catalina.base",
               "-Drecipients.file=${projectDir}/recipients-dev.json",
               "-Dcredentials.file=${projectDir}/certificate-credentials.properties",
               "-Dlogback.file=${projectDir}/certificate-logback.xml",
               "-Dconfig.file=${projectDir}/certificate-dev.properties"]
}

war.dependsOn createVersionPropertyFile

dependencies {
    compile project(':intygstjanst-persistence')
    compile "se.inera.intyg.insuranceprocess.healthreporting:intyg-insuranceprocess-healthreporting-schemas:${intygInsuranceprocessSchemasVersion}"

    compile "se.inera.intyg.schemas:schemas-contract:${schemasContractVersion}"
    compile "se.inera.intyg.infra:hsa-integration:${infraVersion}"
    compile "se.inera.intyg.infra:sjukfall-engine:${infraVersion}"

    compile "se.inera.intyg.common:fk7263:${commonVersion}"
    compile "se.inera.intyg.common:ts-bas:${commonVersion}"
    compile "se.inera.intyg.common:ts-diabetes:${commonVersion}"
    compile "se.inera.intyg.common:luse:${commonVersion}"
    compile "se.inera.intyg.common:lisjp:${commonVersion}"
    compile "se.inera.intyg.common:luae_fs:${commonVersion}"
    compile "se.inera.intyg.common:luae_na:${commonVersion}"
    compile "se.inera.intyg.common:db:${commonVersion}"
    compile "se.inera.intyg.common:doi:${commonVersion}"

    compile "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:${rivtaItintegrationMonitoringSchemasVersion}"
    compile "se.inera.intyg.clinicalprocess.healthcond.rehabilitation:intyg-clinicalprocess-healthcond-rehabilitation-schemas:${intygHealthcondRehabilitationSchemasVersion}"

    compile "org.apache.activemq:activemq-spring:${activeMqVersion}"

    compile "org.springframework:spring-jms:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"

    compileOnly "javax.jms:jms-api:${javaxJmsVersion}"
    compileOnly "javax.servlet:servlet-api:${servletApiVersion}"
    compileOnly "org.apache.activemq:activemq-client:${activeMqVersion}"

    testCompile "com.jayway.restassured:rest-assured:${restassuredVersion}"
    testCompile "com.jayway.restassured:json-schema-validator:${jsonSchemaValidatorVersion}"
    testCompile "javax.jms:jms-api:${javaxJmsVersion}"
    testCompile "org.antlr:ST4:${stAntlr4Version}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "xmlunit:xmlunit:${xmlUnitVersion}"

    // We explicitly declare this as a testRuntime dependency so Restassured tests loads the correct XSD for
    // SetCertificateStatusResponder_1.0.xsd (as it exists in two different schemas)
    testRuntime "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    testRuntime "javax.servlet:servlet-api:${servletApiVersion}"

    testRuntime "com.h2database:h2:${h2Version}"

    gretty "org.apache.activemq:activemq-client:${activeMqVersion}"
    gretty "org.apache.activemq:activemq-broker:${activeMqVersion}"
    gretty "mysql:mysql-connector-java:${mysqlVersion}"
    gretty "com.h2database:h2:${h2Version}"

}
