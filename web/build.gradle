apply plugin: 'org.gretty'
apply plugin: 'war'

gretty {
    def instance = System.properties['instance'] ?: '0'
    def useHttpPort = 8080 + (instance as Integer)
    def useInternalHttpPort = 8180 + (instance as Integer)
    def applicationDir = "${rootProject.projectDir}/devops/dev"

    servletContainer = 'tomcat10'
    contextPath = '/inera-certificate'

    integrationTestTask = null
    scanInterval = 0
    debugPort = 8880 + (instance as Integer)
    portPropertiesFileName = "gretty_ports_${instance}.properties"
    debugSuspend = false
    serverConfigFile = "tomcat-gretty.xml"

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev,bootstrap,testability-api,caching-enabled,it-fk-stub,certificate-service-active",
            "-Dlogback.file=${applicationDir}/config/logback-dev.xml",
            "-Djava.awt.headless=true",
            "-Dfile.encoding=UTF-8",
            "-Dapplication.dir=${applicationDir}",
            "-Drecipient.config.file=${applicationDir}/config/recipients-dev.json",
            "-Ddev.config.file=${applicationDir}/config/application-dev.properties",
            "-Xmx512M",
            "-Ddev.http.port=${useHttpPort}",
            "-Ddev.http.port.internal=${useInternalHttpPort}",
            "-Dxml.catalog.cacheEnabled=false"
    ]
}

test { exclude '**/*IT*' }

tasks.register('restAssuredTest', Test) {
    outputs.upToDateWhen { false }
    systemProperty "integration.tests.baseUrl", System.properties['baseUrl'] ?: "http://localhost:8080/"
    systemProperty "integration.tests.actuatorUrl", System.properties['actuatorUrl'] ?: "http://localhost:8180"
    include '**/*IT*'
    useJUnitPlatform()
}

dependencies {
    implementation project(':intygstjanst-persistence')

    implementation "se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schemas:${intygClinicalprocessSchemasVersion}"
    implementation "se.inera.intyg.clinicalprocess.healthcond.rehabilitation:intyg-clinicalprocess-healthcond-rehabilitation-schemas:${intygHealthcondRehabilitationSchemasVersion}"
    implementation "se.inera.intyg.schemas:schemas-contract:${schemasContractVersion}"
    implementation "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    implementation "se.riv.insuranceprocess.healthreporting:insuranceprocess-healthreporting-schemas:${rivtaInsuranceprocessSchemasVersion}"
    implementation "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:${rivtaItintegrationMonitoringSchemasVersion}"
    implementation "se.riv.strategicresourcemanagement.persons.person:strategicresourcemanagement-persons-person-schemas:${rivtaGetPersonsPersonSchemasVersion}"

    implementation "se.inera.intyg.infra:certificate:${infraVersion}"
    implementation "se.inera.intyg.infra:hsa-integration-api:${infraVersion}"
    implementation "se.inera.intyg.infra:intyginfo:${infraVersion}"
    implementation "se.inera.intyg.infra:message:${infraVersion}"
    implementation "se.inera.intyg.infra:monitoring:${infraVersion}"
    implementation "se.inera.intyg.infra:pu-integration:${infraVersion}"
    implementation "se.inera.intyg.infra:security-filter:${infraVersion}"
    implementation "se.inera.intyg.infra:sjukfall-engine:${infraVersion}"
    implementation "se.inera.intyg.infra:testcertificate:${infraVersion}"

    implementation "se.inera.intyg.common:af00213:${commonVersion}"
    implementation "se.inera.intyg.common:af00251:${commonVersion}"
    implementation "se.inera.intyg.common:ag114:${commonVersion}"
    implementation "se.inera.intyg.common:ag7804:${commonVersion}"
    implementation "se.inera.intyg.common:common-schemas:${commonVersion}"
    implementation "se.inera.intyg.common:common-services:${commonVersion}"
    implementation "se.inera.intyg.common:common-support:${commonVersion}"
    implementation "se.inera.intyg.common:db:${commonVersion}"
    implementation "se.inera.intyg.common:doi:${commonVersion}"
    implementation "se.inera.intyg.common:fk-parent:${commonVersion}"
    implementation "se.inera.intyg.common:fk7263:${commonVersion}"
    implementation "se.inera.intyg.common:integration-util:${commonVersion}"
    implementation "se.inera.intyg.common:lisjp:${commonVersion}"
    implementation "se.inera.intyg.common:luae_fs:${commonVersion}"
    implementation "se.inera.intyg.common:luae_na:${commonVersion}"
    implementation "se.inera.intyg.common:luse:${commonVersion}"
    implementation "se.inera.intyg.common:ts-bas:${commonVersion}"
    implementation "se.inera.intyg.common:ts-diabetes:${commonVersion}"
    implementation "se.inera.intyg.common:tstrk1009:${commonVersion}"
    implementation "se.inera.intyg.common:tstrk1062:${commonVersion}"

    implementation "se.inera.intyg.refdata:refdata-featureK1J-357:${refDataVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "io.prometheus:simpleclient_servlet"
    implementation "jakarta.transaction:jakarta.transaction-api"
    implementation "jakarta.ws.rs:jakarta.ws.rs-api"
    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockSpringVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-provider-redis-spring:${shedlockSpringVersion}"
    implementation "org.antlr:ST4:${stAntlr4Version}"
    implementation "org.apache.activemq:activemq-spring"
    implementation "org.apache.cxf:cxf-rt-features-logging:${cxfVersion}"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}"
    implementation "codes.rafael.jaxb2_commons:jaxb2-basics:${jaxb2Version}"
    implementation "org.springframework:spring-jms"
    implementation "org.springframework:spring-webmvc"
    implementation "org.springframework.data:spring-data-jpa"

    compileOnly "jakarta.persistence:jakarta.persistence-api"
    runtimeOnly "se.inera.intyg.infra:hsa-integration-intyg-proxy-service:${infraVersion}"
    runtimeOnly "com.mysql:mysql-connector-j"
    runtimeOnly "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider"

    testImplementation "org.springframework:spring-test"
    testImplementation "org.xmlunit:xmlunit-legacy"

    testCompileOnly "jakarta.persistence:jakarta.persistence-api"

    // We explicitly declare this as a testRuntime dependency so Restassured tests loads the correct XSD for
    // SetCertificateStatusResponder_1.0.xsd (as it exists in two different schemas)
    testRuntimeOnly "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    testRuntimeOnly "jakarta.servlet:jakarta.servlet-api"
}
