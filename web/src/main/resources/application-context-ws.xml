<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2016 Inera AB (http://www.inera.se)
  ~
  ~ This file is part of sklintyg (https://github.com/sklintyg).
  ~
  ~ sklintyg is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ sklintyg is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://cxf.apache.org/core
        http://cxf.apache.org/schemas/core.xsd
        http://cxf.apache.org/transports/http/configuration
        http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">

  <cxf:bus>
    <cxf:features>
      <cxf:logging/>
    </cxf:features>
  </cxf:bus>

  <!-- ws endpoints -->

  <jaxws:endpoint address="/get-certificate-content/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.GetCertificateContentResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/get-certificate-content-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/get-consent/v1.0" implementor="se.inera.intyg.intygstjanst.web.integration.GetConsentResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/get-consent-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/get-recipients-for-certificate/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.GetRecipientsForCertificateResponderImpl">
  </jaxws:endpoint>

  <jaxws:endpoint address="/list-certificates/v1.0"
                  implementor="se.inera.intyg.intygstjanst.web.integration.ListCertificatesResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/list-certificates-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/list-certificates-for-care/v1.0"
                  implementor="se.inera.intyg.intygstjanst.web.integration.ListCertificatesForCareResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg
                value="transform/clinicalprocess-healthcond-certificate/list-certificates-for-care-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/list-certificates-for-citizen/v1.0"
                  implementor="se.inera.intyg.intygstjanst.web.integration.ListCertificatesForCitizenResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg
                value="transform/clinicalprocess-healthcond-certificate/list-certificates-for-citizen-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/ping-for-configuration/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.PingForConfigurationResponderImpl"/>

  <jaxws:endpoint address="/revoke-certificate/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.RevokeMedicalCertificateResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/revoke-medical-certificate-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/revoke-certificate-wiretap/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.RevokeMedicalCertificateResponderWiretapImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/revoke-medical-certificate-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/send-certificate/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.SendMedicalCertificateResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/send-medical-certificate-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/send-certificate-to-recipient/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.SendCertificateToRecipientResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/clinicalprocess-healthcond-certificate/send-certificate-to-recipient-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>
  
  <jaxws:endpoint address="/send-certificate-to-care/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.SendMessageToCareResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/clinicalprocess-healthcond-certificate/send-message-to-care-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/set-certificate-archived/v1.0"
                  implementor="se.inera.intyg.intygstjanst.web.integration.SetCertificateArchivedResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/set-certificate-status-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/set-certificate-status/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.SetCertificateStatusResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/set-certificate-status-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <jaxws:endpoint address="/set-consent/v1.0" implementor="se.inera.intyg.intygstjanst.web.integration.SetConsentResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/set-consent-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>
  
  <jaxws:endpoint address="/register-certificate-se/v2.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.RegisterCertificateResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/register-certificate-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>
  
   <jaxws:endpoint address="/get-certificate-se/v2.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.GetCertificateResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg value="transform/get-certificate-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>


  <!-- ws clients -->

  <jaxws:client id="revokeMedicalCertificateClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.revokemedicalcertificate.rivtabp20.v1.RevokeMedicalCertificateResponderInterface"
      address="${revokemedicalcertificatev1.endpoint.url}">
  </jaxws:client>

  <jaxws:client id="sendMedicalCertificateQuestionClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.sendmedicalcertificatequestion.rivtabp20.v1.SendMedicalCertificateQuestionResponderInterface"
      address="${sendmedicalcertificatequestionv1.endpoint.url}">
  </jaxws:client>

  <import resource="application-context-ws-stub.xml"/>

  <!-- TjK for ListActiveSickLeavesForCareUnit. Consider moving to separate xml file and import -->
  <jaxws:endpoint address="/list-active-sick-leaves-for-care-unit/v1.0"
      implementor="se.inera.intyg.intygstjanst.web.integration.rehabstod.ListActiveSickLeavesForCareUnitResponderImpl">
    <jaxws:outFaultInterceptors>
      <bean class="se.inera.intyg.common.util.integration.interceptor.SoapFaultToSoapResponseTransformerInterceptor">
        <constructor-arg
            value="transform/clinicalprocess-healthcond-rehabilitation/list-active-sick-leaves-for-care-unit-transform.xslt"/>
      </bean>
    </jaxws:outFaultInterceptors>
  </jaxws:endpoint>

  <beans profile="!dev">
    <http:conduit
            name="\{urn:riv:(clinicalprocess:healthcond|insuranceprocess:healthreporting):.*.http-conduit">
      <http:client AllowChunking="false" AutoRedirect="true" Connection="Keep-Alive"/>
      <http:tlsClientParameters disableCNCheck="true">
        <sec:keyManagers keyPassword="${ntjp.ws.key.manager.password}">
          <sec:keyStore file="${ntjp.ws.certificate.file}" password="${ntjp.ws.certificate.password}"
                        type="${ntjp.ws.certificate.type}"/>
        </sec:keyManagers>
        <sec:trustManagers>
          <sec:keyStore file="${ntjp.ws.truststore.file}" password="${ntjp.ws.truststore.password}" type="${ntjp.ws.truststore.type}"/>
        </sec:trustManagers>

        <sec:cipherSuitesFilter>
          <!-- these filters ensure that a cipher suite with export-suitable or null encryption is used, but exclude anonymous Diffie-Hellman key change 
            as this is vulnerable to man-in-the-middle attacks -->
          <sec:include>.*_EXPORT_.*</sec:include>
          <sec:include>.*_EXPORT1024_.*</sec:include>
          <sec:include>.*_WITH_DES_.*</sec:include>
          <sec:include>.*_WITH_AES_.*</sec:include>
          <sec:include>.*_WITH_NULL_.*</sec:include>
          <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
      </http:tlsClientParameters>
    </http:conduit>
  </beans>

</beans>
