plugins {
    id "io.spring.dependency-management" version "1.1.6" apply false
    id "org.gretty" version "4.1.5" apply false
    id 'test-report-aggregation'
    id 'org.sonarqube' version '4.4.1.3373'
    id "org.owasp.dependencycheck" version "10.0.4"
    id 'jacoco'
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '4.0.0-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '4.0.0-SNAPSHOT'
    refDataVersion = '20'

    intygHealthcondRehabilitationSchemasVersion = "1.1.3.2"
    intygClinicalprocessSchemasVersion = "1.0.24.2"
    rivtaClinicalprocessSchemasVersion = "4.0.5.3"
    rivtaGetPersonsPersonSchemasVersion = "3.1.1.2"
    rivtaInsuranceprocessSchemasVersion = "3.1.0.5.2"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.5.2"
    schemasContractVersion = "2.1.8.2"

    commonsIoVersion = "2.14.0"
    cxfVersion = "4.0.5"
    geronimoJmsVersion = "1.1.1"
    guavaVersion = "32.1.3-jre"
    jakartaJwsApiVersion = "3.0.0"
    jaxb2Version = "3.0.0"
    logbackEcsEncoderVersion = "1.6.0"
    picocliVersion = "4.7.5"
    stAntlr4Version = "4.3.4"
    shedlockSpringVersion = "4.46.0"

    springbootMavenBomVersion = "3.3.4"

    nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

allprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'org.owasp.dependencycheck'

    group = 'se.inera.intyg.intygstjanst'
    version = System.properties['buildVersion'] ?: '4.0.0-SNAPSHOT'
    sourceCompatibility = 21
    targetCompatibility = 21

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    dependencies {
        implementation "ch.qos.logback:logback-classic"
        implementation "jakarta.annotation:jakarta.annotation-api"
        implementation "jakarta.jws:jakarta.jws-api:${jakartaJwsApiVersion}"
        implementation "jakarta.xml.ws:jakarta.xml.ws-api"

        runtimeOnly "com.sun.xml.messaging.saaj:saaj-impl"
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation "junit:junit"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation "org.mockito:mockito-core"
        testImplementation "org.mockito:mockito-junit-jupiter"

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs.add("-parameters")
    }

    compileJava.dependsOn processResources
    test { useJUnitPlatform() }

    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/testability/**",
                        "**/integrationtest/**"
                ])
            }))
        }
    }
}

subprojects.collect {subproject -> subproject.name }.each { subprojectName ->
    dependencies { testReportAggregation project(":${subprojectName}") }
}

sonar {
    properties {
        property "sonar.projectKey", "intyg-intygstjanst"
        property "sonar.projectName", "intyg-intygstjanst"
        property "sonar.dependencyCheck.htmlReportPath", layout.buildDirectory.file("reports/dependency-check-report.html")
        property "sonar.dependencyCheck.htmlReportPath", layout.buildDirectory.file("reports/dependency-check-report.json")
    }
}

dependencyCheck {
    formats = List.of("HTML", "JSON")
    nvd {
        datafeedUrl = "${nvdMirror}"
    }
}

reporting {
    dependencies {
        testReportAggregation project(':intygstjanst-persistence')
        testReportAggregation project(':intygstjanst-web')
        testReportAggregation project(':intygstjanst-liquibase-runner')
    }
}