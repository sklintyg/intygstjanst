<?xml version="1.0" encoding="UTF-8" ?>
<!-- Licensed to Sveriges Kommuner och Landsting under one or more contributor 
  license agreements. See the NOTICE file distributed with this work for additional 
  information regarding copyright ownership. Sveriges Kommuner och Landsting 
  licenses this file to you under the Apache License, Version 2.0 (the "License"); 
  you may not use this file except in compliance with the License. You may 
  obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
  Unless required by applicable law or agreed to in writing, software distributed 
  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
  OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
  the specific language governing permissions and limitations under the License. -->
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'
  xmlns:tns='urn:riv:clinicalprocess:healthcond:certificate:GetRecipientsForCertificate:1'
  xmlns:c='urn:riv:clinicalprocess:healthcond:certificate:1'
  targetNamespace='urn:riv:clinicalprocess:healthcond:certificate:GetRecipientsForCertificate:1'
  elementFormDefault='qualified' attributeFormDefault='unqualified'
  version='1.0'>

  <xs:import namespace="urn:riv:clinicalprocess:healthcond:certificate:1"
             schemaLocation="../../core_components/clinicalprocess_healthcond_certificate_1.0.xsd"/>

  <xs:element name='GetRecipientsForCertificate' type='tns:GetRecipientsForCertificateType' />
  <xs:element name='GetRecipientsForCertificateResponse'
    type='tns:GetRecipientsForCertificateResponseType' />

  <xs:complexType name='GetRecipientsForCertificateType'>
    <xs:sequence>
      <xs:element name="certificateType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name='GetRecipientsForCertificateResponseType'>
    <xs:sequence>
      <xs:element name="recipient" type="tns:RecipientType" maxOccurs="unbounded" />
      <xs:element name="result" type="c:ResultType"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="RecipientType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>